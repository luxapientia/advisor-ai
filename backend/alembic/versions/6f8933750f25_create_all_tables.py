"""Create all tables

Revision ID: 6f8933750f25
Revises: 
Create Date: 2025-09-30 23:33:07.993679

"""
from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision = '6f8933750f25'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_refresh_token'), 'user_sessions', ['refresh_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('hubspot_id', sa.String(length=255), nullable=True),
    sa.Column('google_access_token', sa.Text(), nullable=True),
    sa.Column('google_refresh_token', sa.Text(), nullable=True),
    sa.Column('google_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('hubspot_access_token', sa.Text(), nullable=True),
    sa.Column('hubspot_refresh_token', sa.Text(), nullable=True),
    sa.Column('hubspot_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('google_sync_status', sa.String(length=20), nullable=False),
    sa.Column('hubspot_sync_status', sa.String(length=20), nullable=False),
    sa.Column('google_sync_completed_at', sa.DateTime(), nullable=True),
    sa.Column('hubspot_sync_completed_at', sa.DateTime(), nullable=True),
    sa.Column('google_sync_error', sa.Text(), nullable=True),
    sa.Column('hubspot_sync_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_hubspot_id'), 'users', ['hubspot_id'], unique=True)
    op.create_table('chat_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_message_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_sessions_user_id'), 'chat_sessions', ['user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.String(length=255), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('document_metadata', sa.JSON(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('source_created_at', sa.DateTime(), nullable=True),
    sa.Column('source_updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_processed', 'documents', ['is_processed'], unique=False)
    op.create_index('idx_documents_source_id', 'documents', ['source', 'source_id'], unique=False)
    op.create_index('idx_documents_user_source', 'documents', ['user_id', 'source'], unique=False)
    op.create_index(op.f('ix_documents_source'), 'documents', ['source'], unique=False)
    op.create_index(op.f('ix_documents_source_id'), 'documents', ['source_id'], unique=False)
    op.create_index(op.f('ix_documents_user_id'), 'documents', ['user_id'], unique=False)
    op.create_table('embedding_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('processed_items', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_embedding_jobs_created', 'embedding_jobs', ['created_at'], unique=False)
    op.create_index('idx_embedding_jobs_user_status', 'embedding_jobs', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_embedding_jobs_user_id'), 'embedding_jobs', ['user_id'], unique=False)
    op.create_table('integration_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('service', sa.String(length=50), nullable=False),
    sa.Column('account_id', sa.String(length=255), nullable=False),
    sa.Column('account_email', sa.String(length=255), nullable=True),
    sa.Column('account_name', sa.String(length=255), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_connected', sa.Boolean(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('sync_error', sa.Text(), nullable=True),
    sa.Column('account_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('connected_at', sa.DateTime(), nullable=False),
    sa.Column('disconnected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_integration_accounts_active', 'integration_accounts', ['is_active'], unique=False)
    op.create_index('idx_integration_accounts_connected', 'integration_accounts', ['is_connected'], unique=False)
    op.create_index('idx_integration_accounts_user_service', 'integration_accounts', ['user_id', 'service'], unique=False)
    op.create_index(op.f('ix_integration_accounts_account_email'), 'integration_accounts', ['account_email'], unique=False)
    op.create_index(op.f('ix_integration_accounts_account_id'), 'integration_accounts', ['account_id'], unique=False)
    op.create_index(op.f('ix_integration_accounts_is_active'), 'integration_accounts', ['is_active'], unique=False)
    op.create_index(op.f('ix_integration_accounts_service'), 'integration_accounts', ['service'], unique=False)
    op.create_index(op.f('ix_integration_accounts_user_id'), 'integration_accounts', ['user_id'], unique=False)
    op.create_table('query_cache',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('query_hash', sa.String(length=64), nullable=False),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('query_embedding', Vector(dim=1536), nullable=False),
    sa.Column('retrieved_chunks', sa.JSON(), nullable=False),
    sa.Column('context_summary', sa.Text(), nullable=True),
    sa.Column('hit_count', sa.Integer(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_query_cache_expires', 'query_cache', ['expires_at'], unique=False)
    op.create_index('idx_query_cache_user_hash', 'query_cache', ['user_id', 'query_hash'], unique=False)
    op.create_index(op.f('ix_query_cache_query_hash'), 'query_cache', ['query_hash'], unique=False)
    op.create_index(op.f('ix_query_cache_user_id'), 'query_cache', ['user_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('tool_name', sa.String(length=100), nullable=True),
    sa.Column('tool_parameters', sa.JSON(), nullable=True),
    sa.Column('tool_result', sa.JSON(), nullable=True),
    sa.Column('parent_task_id', sa.UUID(), nullable=True),
    sa.Column('depends_on_task_id', sa.UUID(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('current_step', sa.String(length=100), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['depends_on_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasks_priority', 'tasks', ['priority'], unique=False)
    op.create_index('idx_tasks_scheduled', 'tasks', ['scheduled_for'], unique=False)
    op.create_index('idx_tasks_type_status', 'tasks', ['task_type', 'status'], unique=False)
    op.create_index('idx_tasks_user_status', 'tasks', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_tasks_depends_on_task_id'), 'tasks', ['depends_on_task_id'], unique=False)
    op.create_index(op.f('ix_tasks_parent_task_id'), 'tasks', ['parent_task_id'], unique=False)
    op.create_index(op.f('ix_tasks_scheduled_for'), 'tasks', ['scheduled_for'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_task_type'), 'tasks', ['task_type'], unique=False)
    op.create_index(op.f('ix_tasks_user_id'), 'tasks', ['user_id'], unique=False)
    op.create_table('chat_contexts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('context_type', sa.String(length=50), nullable=False),
    sa.Column('context_data', sa.JSON(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('relevance_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_contexts_session_id'), 'chat_contexts', ['session_id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=50), nullable=True),
    sa.Column('message_metadata', sa.JSON(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('context_sources', sa.JSON(), nullable=True),
    sa.Column('context_embeddings', sa.JSON(), nullable=True),
    sa.Column('tools_called', sa.JSON(), nullable=True),
    sa.Column('tool_results', sa.JSON(), nullable=True),
    sa.Column('is_streaming', sa.Boolean(), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_role'), 'chat_messages', ['role'], unique=False)
    op.create_index(op.f('ix_chat_messages_session_id'), 'chat_messages', ['session_id'], unique=False)
    op.create_table('document_chunks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_length', sa.Integer(), nullable=False),
    sa.Column('embedding', Vector(dim=1536), nullable=False),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chunks_document_index', 'document_chunks', ['document_id', 'chunk_index'], unique=False)
    op.create_index('idx_chunks_embedding', 'document_chunks', ['embedding'], unique=False, postgresql_using='ivfflat', postgresql_with={'lists': 100})
    op.create_index(op.f('ix_document_chunks_document_id'), 'document_chunks', ['document_id'], unique=False)
    op.create_table('ongoing_instructions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=True),
    sa.Column('instruction_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('trigger_conditions', sa.JSON(), nullable=False),
    sa.Column('action_template', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('trigger_count', sa.Integer(), nullable=False),
    sa.Column('last_triggered_at', sa.DateTime(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ongoing_instructions_expires', 'ongoing_instructions', ['expires_at'], unique=False)
    op.create_index('idx_ongoing_instructions_priority', 'ongoing_instructions', ['priority'], unique=False)
    op.create_index('idx_ongoing_instructions_type', 'ongoing_instructions', ['instruction_type'], unique=False)
    op.create_index('idx_ongoing_instructions_user_active', 'ongoing_instructions', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_ongoing_instructions_instruction_type'), 'ongoing_instructions', ['instruction_type'], unique=False)
    op.create_index(op.f('ix_ongoing_instructions_is_active'), 'ongoing_instructions', ['is_active'], unique=False)
    op.create_index(op.f('ix_ongoing_instructions_task_id'), 'ongoing_instructions', ['task_id'], unique=False)
    op.create_index(op.f('ix_ongoing_instructions_user_id'), 'ongoing_instructions', ['user_id'], unique=False)
    op.create_table('sync_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.String(length=50), nullable=False),
    sa.Column('sync_status', sa.String(length=20), nullable=False),
    sa.Column('items_processed', sa.Integer(), nullable=False),
    sa.Column('items_created', sa.Integer(), nullable=False),
    sa.Column('items_updated', sa.Integer(), nullable=False),
    sa.Column('items_deleted', sa.Integer(), nullable=False),
    sa.Column('items_failed', sa.Integer(), nullable=False),
    sa.Column('sync_config', sa.JSON(), nullable=True),
    sa.Column('sync_results', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('memory_usage_mb', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['integration_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sync_logs_account_status', 'sync_logs', ['account_id', 'sync_status'], unique=False)
    op.create_index('idx_sync_logs_created', 'sync_logs', ['created_at'], unique=False)
    op.create_index('idx_sync_logs_type', 'sync_logs', ['sync_type'], unique=False)
    op.create_index(op.f('ix_sync_logs_account_id'), 'sync_logs', ['account_id'], unique=False)
    op.create_index(op.f('ix_sync_logs_sync_status'), 'sync_logs', ['sync_status'], unique=False)
    op.create_index(op.f('ix_sync_logs_sync_type'), 'sync_logs', ['sync_type'], unique=False)
    op.create_table('task_execution_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('execution_type', sa.String(length=50), nullable=False),
    sa.Column('step_name', sa.String(length=100), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_data', sa.JSON(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('memory_usage_mb', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_logs_created', 'task_execution_logs', ['created_at'], unique=False)
    op.create_index('idx_task_logs_task_execution', 'task_execution_logs', ['task_id', 'execution_type'], unique=False)
    op.create_index(op.f('ix_task_execution_logs_task_id'), 'task_execution_logs', ['task_id'], unique=False)
    op.create_table('webhooks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('webhook_id', sa.String(length=255), nullable=False),
    sa.Column('webhook_url', sa.Text(), nullable=False),
    sa.Column('event_types', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('webhook_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_received_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['integration_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhooks_account_active', 'webhooks', ['account_id', 'is_active'], unique=False)
    op.create_index('idx_webhooks_verified', 'webhooks', ['is_verified'], unique=False)
    op.create_index(op.f('ix_webhooks_account_id'), 'webhooks', ['account_id'], unique=False)
    op.create_index(op.f('ix_webhooks_is_active'), 'webhooks', ['is_active'], unique=False)
    op.create_index(op.f('ix_webhooks_webhook_id'), 'webhooks', ['webhook_id'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('webhook_id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('source_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['webhook_id'], ['webhooks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhook_events_created', 'webhook_events', ['created_at'], unique=False)
    op.create_index('idx_webhook_events_type', 'webhook_events', ['event_type'], unique=False)
    op.create_index('idx_webhook_events_webhook_status', 'webhook_events', ['webhook_id', 'status'], unique=False)
    op.create_index(op.f('ix_webhook_events_event_id'), 'webhook_events', ['event_id'], unique=False)
    op.create_index(op.f('ix_webhook_events_event_type'), 'webhook_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_webhook_events_status'), 'webhook_events', ['status'], unique=False)
    op.create_index(op.f('ix_webhook_events_webhook_id'), 'webhook_events', ['webhook_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_webhook_events_webhook_id'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_status'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_type'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_id'), table_name='webhook_events')
    op.drop_index('idx_webhook_events_webhook_status', table_name='webhook_events')
    op.drop_index('idx_webhook_events_type', table_name='webhook_events')
    op.drop_index('idx_webhook_events_created', table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index(op.f('ix_webhooks_webhook_id'), table_name='webhooks')
    op.drop_index(op.f('ix_webhooks_is_active'), table_name='webhooks')
    op.drop_index(op.f('ix_webhooks_account_id'), table_name='webhooks')
    op.drop_index('idx_webhooks_verified', table_name='webhooks')
    op.drop_index('idx_webhooks_account_active', table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index(op.f('ix_task_execution_logs_task_id'), table_name='task_execution_logs')
    op.drop_index('idx_task_logs_task_execution', table_name='task_execution_logs')
    op.drop_index('idx_task_logs_created', table_name='task_execution_logs')
    op.drop_table('task_execution_logs')
    op.drop_index(op.f('ix_sync_logs_sync_type'), table_name='sync_logs')
    op.drop_index(op.f('ix_sync_logs_sync_status'), table_name='sync_logs')
    op.drop_index(op.f('ix_sync_logs_account_id'), table_name='sync_logs')
    op.drop_index('idx_sync_logs_type', table_name='sync_logs')
    op.drop_index('idx_sync_logs_created', table_name='sync_logs')
    op.drop_index('idx_sync_logs_account_status', table_name='sync_logs')
    op.drop_table('sync_logs')
    op.drop_index(op.f('ix_ongoing_instructions_user_id'), table_name='ongoing_instructions')
    op.drop_index(op.f('ix_ongoing_instructions_task_id'), table_name='ongoing_instructions')
    op.drop_index(op.f('ix_ongoing_instructions_is_active'), table_name='ongoing_instructions')
    op.drop_index(op.f('ix_ongoing_instructions_instruction_type'), table_name='ongoing_instructions')
    op.drop_index('idx_ongoing_instructions_user_active', table_name='ongoing_instructions')
    op.drop_index('idx_ongoing_instructions_type', table_name='ongoing_instructions')
    op.drop_index('idx_ongoing_instructions_priority', table_name='ongoing_instructions')
    op.drop_index('idx_ongoing_instructions_expires', table_name='ongoing_instructions')
    op.drop_table('ongoing_instructions')
    op.drop_index(op.f('ix_document_chunks_document_id'), table_name='document_chunks')
    op.drop_index('idx_chunks_embedding', table_name='document_chunks', postgresql_using='ivfflat', postgresql_with={'lists': 100})
    op.drop_index('idx_chunks_document_index', table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_index(op.f('ix_chat_messages_session_id'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_role'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_chat_contexts_session_id'), table_name='chat_contexts')
    op.drop_table('chat_contexts')
    op.drop_index(op.f('ix_tasks_user_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_task_type'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_scheduled_for'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_parent_task_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_depends_on_task_id'), table_name='tasks')
    op.drop_index('idx_tasks_user_status', table_name='tasks')
    op.drop_index('idx_tasks_type_status', table_name='tasks')
    op.drop_index('idx_tasks_scheduled', table_name='tasks')
    op.drop_index('idx_tasks_priority', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_query_cache_user_id'), table_name='query_cache')
    op.drop_index(op.f('ix_query_cache_query_hash'), table_name='query_cache')
    op.drop_index('idx_query_cache_user_hash', table_name='query_cache')
    op.drop_index('idx_query_cache_expires', table_name='query_cache')
    op.drop_table('query_cache')
    op.drop_index(op.f('ix_integration_accounts_user_id'), table_name='integration_accounts')
    op.drop_index(op.f('ix_integration_accounts_service'), table_name='integration_accounts')
    op.drop_index(op.f('ix_integration_accounts_is_active'), table_name='integration_accounts')
    op.drop_index(op.f('ix_integration_accounts_account_id'), table_name='integration_accounts')
    op.drop_index(op.f('ix_integration_accounts_account_email'), table_name='integration_accounts')
    op.drop_index('idx_integration_accounts_user_service', table_name='integration_accounts')
    op.drop_index('idx_integration_accounts_connected', table_name='integration_accounts')
    op.drop_index('idx_integration_accounts_active', table_name='integration_accounts')
    op.drop_table('integration_accounts')
    op.drop_index(op.f('ix_embedding_jobs_user_id'), table_name='embedding_jobs')
    op.drop_index('idx_embedding_jobs_user_status', table_name='embedding_jobs')
    op.drop_index('idx_embedding_jobs_created', table_name='embedding_jobs')
    op.drop_table('embedding_jobs')
    op.drop_index(op.f('ix_documents_user_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_source_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_source'), table_name='documents')
    op.drop_index('idx_documents_user_source', table_name='documents')
    op.drop_index('idx_documents_source_id', table_name='documents')
    op.drop_index('idx_documents_processed', table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chat_sessions_user_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_users_hubspot_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_refresh_token'), table_name='user_sessions')
    op.drop_table('user_sessions')
    # ### end Alembic commands ###