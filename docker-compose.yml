version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg15
    container_name: advisor-ai-postgres
    environment:
      POSTGRES_DB: advisor_ai
      POSTGRES_USER: advisor_user
      POSTGRES_PASSWORD: advisor_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"  # Changed from 5432 to 5433 to avoid conflict
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U advisor_user -d advisor_ai"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - advisor-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: advisor-ai-redis
    ports:
      - "6380:6379"  # Changed from 6379 to 6380 to avoid conflict
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - advisor-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: advisor-ai-backend
    environment:
      - DATABASE_URL=postgresql://advisor_user:advisor_password@postgres:5432/advisor_ai
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - DEBUG=true
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/venv  # Exclude venv from volume mount
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - advisor-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: advisor-ai-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Exclude node_modules from volume mount
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - advisor-network

volumes:
  postgres_data:
  redis_data:

networks:
  advisor-network:
    driver: bridge